%!PS-Adobe-3.0
%%Creator: A2ps version 4.4
%%CreationDate: Sun Mar  9 07:21:23 1997
%%Orientation: Landscape
%%BoundingBox: 0 0 595 842
%%Pages: (atend)
%%DocumentData: Clean7Bit
%%DocumentPaperSizes: A4
%%DocumentFonts: Courier Courier-Bold Helvetica Helvetica-Bold
%%EndComments
% Copyright (c) 1993, 1994, Miguel Santana, M.Santana@frgu.bull.fr
% Modified 1996, Yves Arrouye <Yves.Arrouye@marin.fdn.fr>

/$a2psdict 100 dict def
$a2psdict begin

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Create Courier backspace font
/backspacefont {
    /Courier findfont dup length dict begin
	{ % forall
	    1 index /FID eq { pop pop } { def } ifelse
	} forall
	currentdict /UniqueID known { % if
	    /UniqueID UniqueID 16#800000 xor def
	} if
	CharStrings length 1 add dict begin
	    CharStrings { def } forall
	    /backspace { -600 0 0 0 0 0 setcachedevice } bind def
	    currentdict
	end
	/CharStrings exch def
	/Encoding Encoding 256 array copy def
	Encoding 8 /backspace put
	currentdict
    end
    definefont pop
} bind def

% FUNCTIONS

% Function filename: Initialize file printing.
/fn
{ /filenm xdef
  /filenmwidth filenm stringwidth pop def
  /filenmfont
       filenmwidth fns gt
       {
	       filenmfontname
	       fnfs fns mul filenmwidth div
	     getfont
       }
       { sfnf }
     ifelse
  def
} bind def

% Function header: prints page header. no page
% is passed as argument.
/hp
  { x sd get  y sd get hs sub 1 add  moveto
    df setfont
    gsave
      x sd get y sd get moveto
      0 hs 2 div neg rmoveto 
      hs setlinewidth
      0.95 setgray
      pw 0 rlineto stroke
    grestore
    gsave
      dfs hm rmoveto
      d show				% date/hour
    grestore
    gsave
      pnum cvs pop				% page pop up
        pw (Page 999) stringwidth pop sub
        hm
	  rmoveto
      (Page ) show pnum show		% page number
    grestore
    empty pnum copy pop
    gsave
      filenmfont setfont
         fns filenm stringwidth pop sub 2 div dw add
          bm 2 mul 
        add 
        hm
      rmoveto
        filenm show			% file name
      grestore
    } bind def

% Function border: prints border page
/border 
{ x sd get y sd get moveto
  gsave				% print four sides
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function hborder: completes border of the header.
/hborder 
{ gsave
	0.7 setlinewidth
	0 hs neg rmoveto
	pw 0 rlineto
	stroke
  grestore
} bind def

% Function sheetnumber: prints the sheet number.
/sn
    { snx sny moveto
      df setfont
      pnum cvs
	  dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function loginprint: prints the login id of the requestor.
/lgp
    { lx ly moveto
      df setfont
      dup stringwidth pop neg 0 rmoveto show
    } bind def

% Function currentdate: prints the current date.
/cd
    { dx dy moveto
      df setfont
      (Printed: ) show
      td show
    } bind def

% Function filename_footer: prints the file name at bottom of page.
/fnf
    { fnx fny moveto
      df setfont
      filenm center show
    } bind def

% Function center: centers text.
/center
    { dup stringwidth pop
      2 div neg 0 rmoveto
    } bind def

% Function s: print a source line
/s  { show
      /y0 y0 bfs sub def
      x0 y0 moveto
    } bind def

% Functions b and st: change to bold or standard font
/b  { show
      bdf setfont
    } bind def
/st { show
      bf setfont
    } bind def

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Global initializations

/CourierBack backspacefont
/filenmfontname /Helvetica-Bold def
/inch {72 mul} bind def

%
% Meaning of some variables and functions (coded names)
%
%	twp:		twinpages?
%	sd:		sheet side
%	l:		line counter
%	c:		column counter
%	d:		date
%	td:		current date (for today)
%	lg:		login name
%	fn:		filename printing function
%	sn:		sheetnumber printing function
%	cd:		current date printing function
%	fnf:		filename footer printing function
%	lgp:		login printing function
%	hp:		header printing function
%	y:		y coordinate for the logical page
%	x:		x coordinate for the logical page
%	sny:		y coordinate for the sheet number
%	snx:		x coordinate for the sheet number
%	dy:		y coordinate for the date
%	dx:		x coordinate for the date
%	ly:		y coordinate for the login
%	lx:		x coordinate for the login
%	scx:		x coordinate for the sheet center
%	fny:		y coordinate for the filename (footer)
%	fnx:		x coordinate for the filename (footer)
%	fnfs:		filename font size
%	bfs:		body font size
%	dfs:		date font size
%	bfs:		body font size
%	df:		date font
%	bf:		body font
%	bdf:		bold font
%	sfnf:		standard filename font
%	dw:		date width
%	pw:		page width
%	sw:		sheet width
%	ph:		page height
%	sh:		sheet height
%	hm:		header margin
%	tm:		top margin
%	bm:		body margin
%	rm:		right margin
%	lm:		left margin
%	hs:		header size
%	fns:		filename size

% Initialize page description variables.
/x0 0 def
/y0 0 def
/sh 842 def
/sw 595 def
/margin 1.4 inch def
/rm margin 3 div def
/lm margin 2 mul 3 div def
/d () def
/td (Mar  9 1997 07:21) def
/lg (Printed by peter from eniac) def
%%EndProlog

%%PaperSize: A4
%%BeginPaperSize: A4
%%IncludeFeature: *PageSize A4
%%EndPaperSize

/docsave save def
%%Page: 1 1
/pagesave save def
/twp true def
/fnfs 11 def
/dfs fnfs 0.8 mul def
/df /Helvetica dfs getfont def
/dw df setfont td stringwidth pop def
/sfnf filenmfontname fnfs getfont def
/hm fnfs 0.25 mul def
/hs 0.22 inch def
/bfs 6.8 def
/bdf /Courier-Bold bfs getfont def
/bm bfs 0.7 mul def
/bf /CourierBack bfs getfont def
/l 69 def
/c 89 def
/pw
   bf setfont (0) stringwidth pop c mul bm dup add add
   def
/ph
   bfs l mul bm dup add add hs add
   def
/fns
      pw
      fnfs 4 mul dw add (Page 999) stringwidth pop add
    sub
  def
/tm margin twp {3} {2} ifelse div def
/sd 0 def
/y [ rm ph add bm add
          dup ] def
/sny dfs dfs add def
/snx sh tm dfs add sub def
/dy sny def
/dx tm dfs add def
/x [ tm			% left page
          dup 2 mul pw add	% right page
        ] def
/scx sh 2 div def
/fny dy def
/fnx scx def
/ly fnfs 2 div y sd get add def
/lx snx def
/d (Mar  9 1997 07:10) def
( kernel.asm ) fn
sw 0 translate
90 rotate
1 hp
border
hborder
/x0 x 0 get bm add def
/y0 y 0 get bm bfs add hs add sub def
x0 y0 moveto
bf setfont
( [bits 32]) s
( [inc abs.asm]) s
( ) s
(         ;;      task struktur:) s
(         ;;      00      text offset) s
(         ;;      04      text lM-dngd) s
(         ;;      08      data offset) s
(         ;;      0c      data lM-dngd) s
(         ;;      10      bss offset) s
(         ;;      14      bss lM-dngd) s
(         ;;      18      stack offset) s
(         ;;      1c      stack lM-dngd) s
( ) s
( [section .data]) s
(                 ) s
( gdt     dw 800h) s
(         dd gdt) s
(         dw      0) s
( krnlcs  equ     $-gdt) s
(         dd      0000ffffh       ; code descriptor) s
(         dd      00cf9a00h) s
( krnlds  equ     $-gdt) s
(         dd      0000ffffh       ; data descriptor) s
(         dd      00cf9200h) s
( tsw     equ     $-gdt) s
(         dw      0,t0desc        ; Task Gate) s
(         dw      08500h,0) s
( t0desc  equ     $-gdt) s
(         dw      400h,pcbs       ; Task 0) s
(         dd      00008900h) s
( ) s
(         ) s
( c3desc  equ     0040fa00h) s
( d3desc  equ     0040f200h) s
(         ) s
( ) s
(         times 800h-$+gdt db 0) s
( idt     times 100h dw dummyh,8,8e00h,0) s
( ) s
( ) s
( idtptr  dw      07ffh) s
(         dd      idt) s
( ) s
( lastsel dd      30h) s
( ) s
(         ) s
( msg1    db      'Running....',0ah,0) s
( ) s
( ) s
( [section .text]) s
( start:  ) s
(         mov ax,krnlds) s
(         mov ds,ax) s
(         mov es,ax) s
(         mov fs,ax) s
(         mov gs,ax) s
(         mov ss,ax) s
(         mov esp,10000h) s
(         ) s
(         call enableA20) s
(         call getmems) s
(         call init8259) s
(         call init8253) s
(         call initIDT) s
(         call initpcbs) s
(         lidt [idtptr]) s
(         sti) s
( ) s
(         mov bl,0) s
/sd 1 def
2 hp
border
hborder
/x0 x 1 get bm add def
/y0 y 1 get bm bfs add hs add sub def
x0 y0 moveto
bf setfont
(         int 42h) s
(         mov esi,msg1) s
(         mov bl,5) s
(         int 42h) s
(         mov bl,4) s
(         mov al,0ah) s
(         int 42h) s
( ) s
(         mov ecx,1000h) s
(         call memget) s
(         mov edi,eax     ) s
(         mov esi,endmark) s
(         mov ecx,1000h) s
(         rep movsb) s
(         mov esi,eax) s
(         call loadtask) s
(         call runtask) s
( ) s
(         mov ecx,1000h) s
(         call memget) s
(         mov edi,eax) s
(         mov esi,endmark+1000h) s
(         mov ecx,1000h) s
(         rep movsb) s
(         mov esi,eax) s
(         call loadtask) s
(         call runtask) s
( ) s
(         jmp $) s
( ) s
( newgdtent:                      ; esi = pekare till task) s
(         push eax) s
(         push ebx) s
(         push edi) s
(         mov eax,esi) s
(         shl eax,16) s
(         mov ecx,[esi+04]) s
(         add ecx,[esi+0ch]) s
(         add ecx,[esi+14h]) s
(         add ecx,[esi+1ch]) s
(         mov ax,cx) s
(         and ecx,000f0000h) s
(         mov ebx,esi) s
(         xor bx,bx) s
(         bswap ebx) s
(         ror ebx,8) s
(         or ebx,ecx) s
(         push ebx) s
(         or ebx,c3desc) s
(         call addgdtent) s
(         mov edi,edx) s
(         pop ebx) s
(         or ebx,d3desc) s
(         call addgdtent) s
(         mov ecx,edi) s
(         pop edi) s
(         pop ebx) s
(         pop eax) s
(         ret                     ; ecx=code selector edx=data selector) s
(         ) s
( ) s
( addgdtent:                              ; eax:ebx = descriptor) s
(         mov edx,[lastsel]) s
(         add edx,8) s
(         mov [1000h+edx],eax) s
(         mov [1000h+edx+4],ebx) s
(         mov [lastsel],edx) s
(         ret                     ; returnerar selector i edx) s
( ) s
/sd 0 def
1 sn
fnf
lg lgp
pagesave restore
showpage
%%Page: 2 2
/pagesave save def
/twp true def
/fnfs 11 def
/dfs fnfs 0.8 mul def
/df /Helvetica dfs getfont def
/dw df setfont td stringwidth pop def
/sfnf filenmfontname fnfs getfont def
/hm fnfs 0.25 mul def
/hs 0.22 inch def
/bfs 6.8 def
/bdf /Courier-Bold bfs getfont def
/bm bfs 0.7 mul def
/bf /CourierBack bfs getfont def
/l 69 def
/c 89 def
/pw
   bf setfont (0) stringwidth pop c mul bm dup add add
   def
/ph
   bfs l mul bm dup add add hs add
   def
/fns
      pw
      fnfs 4 mul dw add (Page 999) stringwidth pop add
    sub
  def
/tm margin twp {3} {2} ifelse div def
/sd 0 def
/y [ rm ph add bm add
          dup ] def
/sny dfs dfs add def
/snx sh tm dfs add sub def
/dy sny def
/dx tm dfs add def
/x [ tm			% left page
          dup 2 mul pw add	% right page
        ] def
/scx sh 2 div def
/fny dy def
/fnx scx def
/ly fnfs 2 div y sd get add def
/lx snx def
/d (Mar  9 1997 07:10) def
( kernel.asm ) fn
sw 0 translate
90 rotate
3 hp
border
hborder
/x0 x 0 get bm add def
/y0 y 0 get bm bfs add hs add sub def
x0 y0 moveto
bf setfont
(         ) s
( [inc memory.asm]) s
( [inc proc.asm]) s
( [inc video.asm]) s
( [inc ints.asm]) s
( [inc kbd.asm]) s
( [inc init.asm]) s
( ) s
( [section .text]) s
(         times 1000h-$+start db 0) s
( [section .data]) s
( endmark:) s
/sd 1 def
/sd 0 def
2 sn
fnf
lg lgp
pagesave restore
showpage

%%Trailer
%%Pages: 2
docsave restore end
